>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[6, 5, 6], [8, 8, 7]]
>>> print(matrix_divided(matrix, 3))
[[2.0, 1.67, 2.0], [2.67, 2.67, 2.33]]

>>> matrix = [['s', 'e', 'p'], ['b', 4, 7]]
>>> print(matrix_divided(matrix, 8))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[10, 2, 5], [2, 1, 9]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[], []]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[6, 8, 8], [5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 2))
[[]]

>>> matrix = [[], []]
>>> print(matrix_divided(matrix, 2))
[[], []]

>>> matrix = [[-50, 5, -3], [6, 8, -8]]
>>> print(matrix_divided(matrix, 2))
[[-25.0, 2.5, -1.5], [3.0, 4.0, -4.0]]

>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
